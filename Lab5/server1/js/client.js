/**
 * COMP4537 - Lab 5
 * Names: Andy Lau #A01192350 - Victor Liu #A00971668
 * Group: C1
 * Date: 2024-10-13
 *
 * client.js
 *
 * Handles the client side.
 *
 * Note: code generated by ChatGPT has been commented where used.
 */

import ENGLISH from "../lang/en/en.js";
import { getCurrentTimestamp } from "../utils/utils.js";
const SERVER_DOMAIN = "https://andypangpang.com";

// ███████╗ ████████╗ ██████╗  ██╗ ███╗   ██╗  ██████╗  ███████╗
// ██╔════╝ ╚══██╔══╝ ██╔══██╗ ██║ ████╗  ██║ ██╔════╝  ██╔════╝
// ███████╗    ██║    ██████╔╝ ██║ ██╔██╗ ██║ ██║  ███╗ ███████╗
// ╚════██║    ██║    ██╔══██╗ ██║ ██║╚██╗██║ ██║   ██║ ╚════██║
// ███████║    ██║    ██║  ██║ ██║ ██║ ╚████║ ╚██████╔╝ ███████║
// ╚══════╝    ╚═╝    ╚═╝  ╚═╝ ╚═╝ ╚═╝  ╚═══╝  ╚═════╝  ╚══════╝

document.addEventListener("DOMContentLoaded", function () {
  const pageTitle = document.getElementById("pageTitle");
  pageTitle.textContent = ENGLISH.PAGE_TITLE;

  const labHeader = document.getElementById("labHeader");
  labHeader.textContent = ENGLISH.LAB_HEADER;

  const teamMembers = document.getElementById("teamMembers");
  teamMembers.textContent = ENGLISH.TEAM_MEMBERS;

  const submitDate = document.getElementById("submitDate");
  submitDate.textContent = ENGLISH.SUBMIT_DATE;

  const stringHeaderElementTestDB = document.getElementById(
    "headerSectionTestDB"
  );
  stringHeaderElementTestDB.textContent = ENGLISH.TITLE_SECTION.TEST_DB;

  const stringDescriptionSectionTestDB = document.getElementById(
    "descriptionSectionTestDB"
  );
  stringDescriptionSectionTestDB.innerHTML =
    ENGLISH.DESCRIPTION_SECTION.TEST_DB;

  const stringTestButtonSectionTestDB = document.getElementById(
    "testButtonSectionTestDB"
  );
  stringTestButtonSectionTestDB.value = ENGLISH.BUTTON.TEST;

  const stringHeaderElementSendQuery = document.getElementById(
    "headerSectionSendQuery"
  );
  stringHeaderElementSendQuery.textContent = ENGLISH.TITLE_SECTION.SEND_QUERY;

  const stringPlaceHolderSendQuery =
    document.getElementById("textBoxSendQuery");
  stringPlaceHolderSendQuery.placeholder = ENGLISH.SEND_QUERY_PLACE_HOLDER;

  const stringButtonSendQuery = document.getElementById("buttonSendQuery");
  stringButtonSendQuery.value = ENGLISH.BUTTON.SEND_QUERY;

  const stringDescriptionSectionSendQuery = document.getElementById(
    "descriptionSectionSendQuery"
  );
  stringDescriptionSectionSendQuery.innerHTML =
    ENGLISH.DESCRIPTION_SECTION.SEND_QUERY;
});

//     ██╗ ████████╗ ███████╗ ███████╗ ████████╗   ██████╗  ██╗   ██╗ ███████╗ ██████╗  ██╗   ██╗
//    ██╔╝ ╚══██╔══╝ ██╔════╝ ██╔════╝ ╚══██╔══╝  ██╔═══██╗ ██║   ██║ ██╔════╝ ██╔══██╗ ╚██╗ ██╔╝
//   ██╔╝     ██║    █████╗   ███████╗    ██║     ██║   ██║ ██║   ██║ █████╗   ██████╔╝  ╚████╔╝
//  ██╔╝      ██║    ██╔══╝   ╚════██║    ██║     ██║▄▄ ██║ ██║   ██║ ██╔══╝   ██╔══██╗   ╚██╔╝
// ██╔╝       ██║    ███████╗ ███████║    ██║     ╚██████╔╝ ╚██████╔╝ ███████╗ ██║  ██║    ██║
// ╚═╝        ╚═╝    ╚══════╝ ╚══════╝    ╚═╝      ╚══▀▀═╝   ╚═════╝  ╚══════╝ ╚═╝  ╚═╝    ╚═╝

document
  .getElementById("formTestDBQuery")
  .addEventListener("submit", async function (event) {
    event.preventDefault();

    // for local testing:
    // const url = `http://localhost:3000/comp4537-lab5/api/testQuery`;
    // for live deployment:
    const url = `${SERVER_DOMAIN}/comp4537-lab5/api/testQuery`;

    // https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch
    const patients = {
      patients: [
        { name: "Sara Brown", dateOfBirth: "1901-01-01" },
        { name: "John Smith", dateOfBirth: "1941-01-01" },
        { name: "Jack Ma", dateOfBirth: "1961-01-30" },
        { name: "Elon Musk", dateOfBirth: "1999-01-01" },
      ],
    };
    try {
      const response = await fetch(url, {
        mode: "cors",
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify(patients),
      });

      if (!response.ok) {
        if (response.status === 405) {
          // ChatGPT: asked to convert code block using ternary operator
          const errorMessage =
            response.status === 405
              ? CONSTANTS.STATUS_405(response.status)
              : response.statusText;

          document.getElementById("divResultSectionTestDB").innerHTML = `
                        <div>Error: ${response.status}</div>
                        <div>${errorMessage}</div>
                      `;
          throw new Error(CONSTANTS.RESPONSE_STATUS(response.status));
        } else if (response.status === 409) {
          const data = await response.json();
          const displayContainer = document.getElementById(
            "divResultSectionTestDB"
          );
          displayContainer.innerHTML = `
                        <div>${data.result}</div>
                    `;
          displayContainer.style.color = "red";
        }
      } else {
        const data = await response.json();
        document.getElementById("divResultSectionTestDB").innerHTML = `
                    <div>
                        <em>${getCurrentTimestamp()}</em>
                        <br>
                        ${data.result}
                    </div>
                `;
      }
    } catch (error) {
      console.error(error.message);
    }
  });

//     ██╗ ███████╗ ███████╗ ███╗   ██╗ ██████╗     ██████╗  ██╗   ██╗ ███████╗ ██████╗  ██╗   ██╗
//    ██╔╝ ██╔════╝ ██╔════╝ ████╗  ██║ ██╔══██╗   ██╔═══██╗ ██║   ██║ ██╔════╝ ██╔══██╗ ╚██╗ ██╔╝
//   ██╔╝  ███████╗ █████╗   ██╔██╗ ██║ ██║  ██║   ██║   ██║ ██║   ██║ █████╗   ██████╔╝  ╚████╔╝
//  ██╔╝   ╚════██║ ██╔══╝   ██║╚██╗██║ ██║  ██║   ██║▄▄ ██║ ██║   ██║ ██╔══╝   ██╔══██╗   ╚██╔╝
// ██╔╝    ███████║ ███████╗ ██║ ╚████║ ██████╔╝   ╚██████╔╝ ╚██████╔╝ ███████╗ ██║  ██║    ██║
// ╚═╝     ╚══════╝ ╚══════╝ ╚═╝  ╚═══╝ ╚═════╝     ╚══▀▀═╝   ╚═════╝  ╚══════╝ ╚═╝  ╚═╝    ╚═╝

document
  .getElementById("formSendQuery")
  .addEventListener("submit", async function (event) {
    event.preventDefault();

    const inputQuery = document.getElementById("textBoxSendQuery").value.trim();
    // ChatGPT: Asked how to differentiate between GET and POST requests for DB queries:
    let url;
    let method;

    if (/^SELECT/i.test(inputQuery)) {
      method = "GET";
      // url = `http://localhost:3000/comp4537-lab5/api/sendQuery?query=${encodeURIComponent(inputQuery)}`;
        url = `${SERVER_DOMAIN}/comp4537-lab5/api/sendQuery?query=${encodeURIComponent(inputQuery)}`;
    } else if (/^INSERT/i.test(inputQuery)) {
      method = "POST";
      // url = `http://localhost:3000/comp4537-lab5/api/sendQuery`;
        url = `${SERVER_DOMAIN}/comp4537-lab5/api/sendQuery`;
    } else if (/^(UPDATE|DELETE|DROP)/i.test(inputQuery)) {
      document.getElementById("divResultSectionSendQuery").innerHTML = `
                <div>${ENGLISH.DENY_QUERY}</div>
            `;
      return; // Prevent the query from being sent
    } else {
      document.getElementById("divResultSectionSendQuery").innerHTML = `
                <div>${ENGLISH.UNSUPPORTED_QUERY}</div>
            `;
      return;
    }

    // https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch
    try {
      const response = await fetch(url, {
        mode: "cors",
        method: method,
        headers: {
          "Content-Type": "application/json",
        },
        body:
          method === "POST" ? JSON.stringify({ query: inputQuery }) : undefined,
        // body: JSON.stringify({ query: inputQuery })
      });

      if (!response.ok) {
        if (response.status === 405) {
          const errorMessage =
            response.status === 405
              ? CONSTANTS.STATUS_405(response.status)
              : response.statusText;

          document.getElementById("divResultSectionSendQuery").innerHTML = `
                        <div>Error: ${response.status}</div>
                        <div>${errorMessage}</div>
                    `;
          throw new Error(CONSTANTS.RESPONSE_STATUS(response.status));
        } else if (response.status === 409) {
          const data = await response.json();
          // console.log("@@@@@@@@@@@@@@@@@", data)
          console.log(data)
          const displayContainer = document.getElementById(
            "divResultSectionSendQuery"
          );
          displayContainer.innerHTML = `
                     
                <div>Error: ${data.message}</div>
                    `;
          displayContainer.style.color = "red";
        }
      } else {
        const data = await response.json();
        const dataString = JSON.stringify(data, null, 2);
        document.getElementById("divResultSectionSendQuery").style.color = "black";
        document.getElementById("divResultSectionSendQuery").innerHTML = `
            <div>
                <em>${getCurrentTimestamp()}</em>
                <pre><code>${dataString}</code></pre>
            </div>
        `;
      }
    } catch (error) {
      console.error(error.message);
    }
  });
